import os
from analise_salarios_datascience import *

# ============================================
# OP√á√ÉO 1: Executar an√°lise completa autom√°tica
# ============================================
print("OP√á√ÉO 1: An√°lise Completa Autom√°tica (com kagglehub)")
print("="*50)

# Basta executar a fun√ß√£o main() - baixa automaticamente do Kaggle
# df_final, modelos, clustering = main()


# ============================================
# OP√á√ÉO 2: Executar an√°lises individuais
# ============================================
print("\n\nOP√á√ÉO 2: An√°lises Individuais")
print("="*50)

# 1. Carregar dados (baixa automaticamente do Kaggle)
print("\nüîÑ Baixando dataset do Kaggle...")
df = carregar_dados(usar_kagglehub=True)
df = preparar_dados(df)

# 2. An√°lises Temporais
print("\n--- An√°lises Temporais ---")
evolucao = analise_evolucao_salarial(df)
evolucao_cargo = analise_por_cargo(df)
impacto = analise_impacto_pandemia(df)
sazonalidade = analise_sazonalidade(df)

# 3. Modelagem Preditiva
print("\n--- Modelagem Preditiva ---")
X, y, features, encoders = preparar_features_para_modelo(df)
modelos, scaler = treinar_modelos_preditivos(X, y)

# 4. Clustering
print("\n--- Clustering de Perfis ---")
df_clusters, clusters, kmeans = clustering_perfis(df, X)

# 5. Salvar resultados em CSV
print("\n--- Salvando Resultados ---")
if not os.path.exists('outputs'):
    os.makedirs('outputs')
df_clusters.to_csv('outputs/dataset_com_clusters.csv', index=False)
print("‚úì Dataset com clusters salvo!")


# ============================================
# OP√á√ÉO 3: An√°lises customizadas
# ============================================
print("\n\nOP√á√ÉO 3: An√°lises Customizadas")
print("="*50)

# Exemplo: An√°lise espec√≠fica por n√≠vel de experi√™ncia
if 'experience_level' in df.columns:
    print("\nüìä An√°lise por N√≠vel de Experi√™ncia:")
    exp_analysis = df.groupby('experience_level')['salary_in_usd'].agg([
        'mean', 'median', 'min', 'max', 'count'
    ])
    print(exp_analysis)

# Exemplo: Top 5 pa√≠ses com maiores sal√°rios
if 'company_location' in df.columns:
    print("\nüåç Top 5 Pa√≠ses com Maiores Sal√°rios:")
    top_paises = df.groupby('company_location')['salary_in_usd'].mean().sort_values(ascending=False).head(5)
    print(top_paises)

# Exemplo: An√°lise de trabalho remoto
if 'remote_ratio' in df.columns:
    print("\nüíª Impacto do Trabalho Remoto:")
    remote_analysis = df.groupby('remote_ratio')['salary_in_usd'].agg(['mean', 'count'])
    print(remote_analysis)


print("\n\n" + "="*50)
print("‚úÖ An√°lises conclu√≠das!")
print("="*50)
print("\nüìÅ Arquivos gerados na pasta '/mnt/user-data/outputs/':")
print("  ‚Ä¢ evolucao_salarial.png")
print("  ‚Ä¢ evolucao_por_cargo.png")
print("  ‚Ä¢ impacto_pandemia.png")
print("  ‚Ä¢ sazonalidade_contratacoes.png")
print("  ‚Ä¢ modelagem_preditiva.png")
print("  ‚Ä¢ feature_importance.png")
print("  ‚Ä¢ elbow_method.png")
print("  ‚Ä¢ clustering_perfis.png")
print("  ‚Ä¢ dataset_com_clusters.csv")